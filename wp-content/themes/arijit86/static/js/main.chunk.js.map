{"version":3,"file":"static/js/main.chunk.js","sources":["C:/xampp/htdocs/arijitnandi/wp-content/themes/arijit86/react-src/src/App.css","C:/xampp/htdocs/arijitnandi/wp-content/themes/arijit86/react-src/src/App.js","C:/xampp/htdocs/arijitnandi/wp-content/themes/arijit86/react-src/src/components/Homepage.js","C:/xampp/htdocs/arijitnandi/wp-content/themes/arijit86/react-src/src/components/demo/tododemo/Todolist.js","C:/xampp/htdocs/arijitnandi/wp-content/themes/arijit86/react-src/src/components/inc/Header.js","C:/xampp/htdocs/arijitnandi/wp-content/themes/arijit86/react-src/src/index.css","C:/xampp/htdocs/arijitnandi/wp-content/themes/arijit86/react-src/src/index.js","C:/xampp/htdocs/arijitnandi/wp-content/themes/arijit86/react-src/src/serviceWorker.js"],"sourcesContent":["// extracted by mini-css-extract-plugin","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\nimport \"./App.css\";\nimport Homepage from './components/Homepage';\nimport Header from './components/inc/Header';\nimport Todolist from './components/demo/tododemo/Todolist';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <meta name=\"viewport\" content=\"initial-scale=1, width=device-width\" />\n                <Header />\n                <Routes>\n                    <Route path=\"/arijitnandi\" element={<Homepage />} />\n                    <Route path=\"/arijitnandi/react/demos/tododemo\" element={<Todolist />} />\n                </Routes>\n                {/* <Footer /> */}\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\">\r\n            <CssBaseline />\r\n            <Box\r\n                sx={{\r\n                    marginTop: 8,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <NavLink to='/arijitnandi/react/demos/tododemo'>Todolist</NavLink>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useState } from 'react'\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField'\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Alert from '@mui/material/Alert';\r\nimport Modal from '@mui/material/Modal';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ModalClose from '@mui/joy/ModalClose';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst Todolist = () => {\r\n    const [itemStatus, setItemStatus] = useState(false);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const [newItem, setNewItem] = useState([]);\r\n    const [todoList, setTodoList] = useState([]);\r\n\r\n    const handleInputChange = (event) => {\r\n        console.log('...changed...' + event.target.value)\r\n        setNewItem({ ...newItem, name: event.target.value });\r\n    };\r\n\r\n    const handleStateChange = (event) => {\r\n        console.log('...changed...' + event.target.value)\r\n        setItemStatus(event.target.value);\r\n    };\r\n\r\n    const handleAddItem = () => {\r\n        console.log('...changed...' + newItem.name + '...' + itemStatus)\r\n        if (newItem.name.trim() !== '') {\r\n            setTodoList((prevTodoList) => [...prevTodoList, { name: newItem.name, status: itemStatus }]);\r\n            setNewItem({ name: '', status: false });\r\n            setOpen(false)\r\n        }\r\n    };\r\n\r\n    const handleCheckboxChange = (index) => {\r\n        console.log('...changed...' + index)\r\n        setTodoList((prevTodoList) => {\r\n            const updatedTodoList = [...prevTodoList];\r\n            updatedTodoList[index].status = !updatedTodoList[index].status;\r\n            return updatedTodoList;\r\n        });\r\n    }\r\n\r\n    const handleListDelete = (index) => {\r\n        console.log('...deleting')\r\n        setTodoList((prevTodoList) => {\r\n            const updatedTodoList = [...prevTodoList];\r\n            updatedTodoList.splice(index, 1);\r\n            return updatedTodoList;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container component=\"main\" className='back-2'>\r\n                <CssBaseline />\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <div className=\"container-fluid back-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 back-3\">\r\n                                <h3>\r\n                                    To-Do list in React\r\n                                </h3>\r\n                                <br />\r\n                                <p>\r\n                                    Add item to the list, or mark complete. You can filter the list also.\r\n                                </p>\r\n                                <br />\r\n                                <Button onClick={handleOpen} variant=\"contained\">Add Item</Button>\r\n                                <Modal\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                    aria-labelledby=\"modal-modal-title\"\r\n                                    aria-describedby=\"modal-modal-description\"\r\n                                >\r\n                                    <Box sx={style}>\r\n                                        <div>\r\n                                            <FormControl fullWidth sx={{ marginBottom: 2 }}>\r\n                                                <TextField\r\n                                                    id=\"item-title\"\r\n                                                    label=\"Add Item to your list\"\r\n                                                    variant=\"outlined\"\r\n                                                    onChange={handleInputChange}\r\n                                                />\r\n                                            </FormControl>\r\n\r\n                                            <FormControl fullWidth sx={{ marginBottom: 2 }}>\r\n                                                <InputLabel id=\"select-status\">Status</InputLabel>\r\n                                                <Select\r\n                                                    id=\"select-status\"\r\n                                                    value={itemStatus}\r\n                                                    label=\"Status\"\r\n                                                    onChange={handleStateChange}\r\n                                                >\r\n                                                    <MenuItem value={false}>Not Completed</MenuItem>\r\n                                                    <MenuItem value={true}>Completed</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n\r\n                                            <FormControl sx={{ marginTop: 2 }}>\r\n                                                <Button variant=\"outlined\" onClick={handleAddItem}>\r\n                                                    Add Item\r\n                                                </Button>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </Box>\r\n\r\n                                </Modal>\r\n                                <br />\r\n                                <br />\r\n                                {todoList.length > 0 ?\r\n                                    <List sx={{ width: '100%' }}>\r\n                                        {todoList.map((value, index) => (\r\n                                            <ListItem key={index} disablePadding>\r\n                                                <ListItemButton role={undefined} dense onClick={() => handleCheckboxChange(index)}>\r\n                                                    <ListItemIcon>\r\n                                                        <Checkbox\r\n                                                            edge=\"start\"\r\n                                                            tabIndex={-1}\r\n                                                            // disableRipple\r\n                                                            checked={value.status}\r\n                                                        />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText id={index} primary={value.name} className={`${value.status ? 'Strikethrough' : ''}`} />\r\n                                                </ListItemButton>\r\n                                                <Button onClick={() => handleListDelete(index)}>Delete</Button>\r\n                                            </ListItem>\r\n                                        ))}\r\n                                    </List>\r\n                                    : <Alert variant=\"outlined\" severity=\"info\">\r\n                                        No to do item added yet.\r\n                                    </Alert>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todolist","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <ul className=\"nav\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink to='/arijitnandi'>Home</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","// extracted by mini-css-extract-plugin","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxjLA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;;;;;;;;;;;ACtBA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA,eA8BA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}